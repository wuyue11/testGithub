一、选择题（共12小题，每小题2.5分，共30分）
	以下不是spring boot优点的是 ( D )
		A．快速搭建项目
		B．简化配置  
		C．自动配置  
		D．无需容器
	Spring Boot配置，以下哪个优先级最高（A ）
		A、外置：xx.jar同目录下/config/application.properties；
		B、外置：xx.jar同目录下/config/application.yml；
		C、内置：src/main/resources/config；
		D、内置：src/main/resources
	以下log日志级别哪个最高（D）
		A、DEBUG
		B、INFO
		C、WARN
		D、ERROR
	以下不是spring boot的核心注解的是 ( D )
		A.	@SpringBootConfiguration
		B.	@EnableAutoConfiguration
		C.	@ComponentScan
		D.	@MapperScan
	要使用springMVC的功能，需要导入那个包 ( C )
		A．spring-boot-starter-jdbc  
		B．spring-boot-starter-thymeleaf  
		C．spring-boot-starter-web  
		D．mybatis-spring-boot-starter
	以下哪个注解不能加在类上 (  )
		A.	@Controller
		B.	@ResponseBody
		C.	@RestController
		D.	@RequestMapping
	当控制层上有@RestController注解时，方法中返回一个字符串“<h1>Hello</h1>”，浏览器调用的结果是 (  C)
		A. 一级标题显示的Hello
		B.	找不到Hello.html
		C.	<h1>Hello</>
		D.	Hello
	SpringBoot项目中配置文件的格式 (C  )
		A．properties  
		B．yml  
		C．两者都可以
	不是SpringBoot核心配置文件是（C）
		A.	bootstrap
		B.	application
		C.	application-dev
	前台使用json参数格式，控制器consumer、参数使用的注解是（A）
		A、application/josn ---- @RequestBody
		B、application/josn ---- @ModelAttribute
		C、application/x-www-form-urlencoded ---- @RequestBody
		D、application/x-www-form-urlencoded ---- @ModelAttribute
	@Pointcut("execution(public * com.thornBird.sbd.modules.*.controller.*.*(..))")，第三个*代表（D）
		A、代表返回类型不限
		B、代表module下所有子包
		C、代表所有类
		D、代表所有方法
	Url匹配风格中/admin*，以下哪个匹配不正确（D）
		A、/admin
		B、/admin1
		C、/admin123
		D、/admin/1
	Mybatis框架中，插入数据使用那个注解（B）
		A、@Update
		B、@Insert
		C、@Select
		D、@InsertMapping

二、填空题（共5小题，每小题5分，共25分）
	获取配置文件的属性值，使用哪个注解_____@Value___________；
	Java配置依赖的2个注解是____@Autowired______，____@Compoent_______;
	Spring Boot修改tomcat端口号为9090应该怎么写？______server.port=9092______;
	自定义拦截器需要实现____HandlerInterceptor____接口；
	过滤器需要使用______@WebFilter___注解;
	上传文件，使用__MultipartFile__接收文件对象，consumer使用__multipart/form-data___;

三、问答题（每题5分，共25分）
	阐述 Spring Boot 特性，举一个例子来解释 Staters 的内容；
		1. 快速开发，pom,以starter形式，按照组类聚了多个jar,形成单条依赖，以父子继承的方式，实现jar版本的控制
		2. “约定优于配置”,简化配置，没有web.xml
		3. 注解开发
		4. 内嵌servlet容器
		5. 监控方便


	Mybatis传参中，#{*}、${*}的区别？
		#{}是占位符会转化成"?"  ${}是字符串拼接的形式组成sql语句


	简述Restful规则？
		URI结尾不应包含（/）；
		正斜杠分隔符（/）必须用来指示层级关系；
		应使用连字符（ - ）来提高URI的可读性；
		不得在URI中使用下划线（_）；
		URI路径中全都使用小写字母；



	简述Git使用流程，写几个常用Git命令？
	在gitHub或者码云上创建一个远程仓库，默认只有一个主分支，将这个仓库clone下来，把其中的.git文件放到我们的项目同级目录，我们这个项目就被Git管理了，然后就可以使用git add 文件名 将文件添加到暂存区，通过git commit -m 将暂存区的文件提交到本地仓库，通过git push origin master 推送到远程仓库的主分支，一次提交就完成了。 常用命令 ：git add 文件名
git commit -m   git push origin master git status 等 


	简述shiro两大功能实现流程；	
        	认证：用户输入用户名和密码，控制层接收参数，服务层封装用户名密码到token（如果没有在配置文件中设置加密方式，就需要通过MD5Utils工具将密码进行加密再封装到token），通过subject.login进行登录，进入到自定义的realml类的认证方法，获取到token里的用户名，调用dao层查询此用户，用户不存在返回错误信息，用户存在，封装用户认证对象并返回，通过认证对象和token对象进行比对，如果匹配就认证成功。
	授权：前端页面存在shrio标签或者用户操作相关涉及权限的方法就会调用此方法，首先从认证方法里封装的认证信息里得到用户对象，然后调用Dao层获取角色或者权限相关信息，再添加到授权信息对象里，最后放回认证对象。


四、编程题（每题10分，共20分）
	1、提供一个接口，返回 List<User> 列表，对该列表进行排序、保留10条数据；页面端使用 ajax post 方式提交请求，包装查询参数，获取接口返回数据，并遍历数据渲染到页面上 table 表格中；
	编写数据接口
	/**用户页面
    	 * 127.0.0.1/api/users ---- post
     	* {"currentPage":"1","pageSize":"10"}
    	 */
   	 @PostMapping(value = "/users", consumes = MediaType.APPLICATION_JSON_VALUE)
    	public PageInfo<User> getUsersBySearchVo2(@RequestBody SearchVo searchVo){
       	 return userService.getUsersBySearchVo(searchVo);
    	}
	编写接口的实现类service层和dao层
	//分页
    	PageInfo<User> getUsersBySearchVo(SearchVo searchVo);

 	//分页
    	@Override
    	public PageInfo<User> getUsersBySearchVo(SearchVo searchVo) {
        	searchVo.initSearchVo();
        	PageHelper.startPage(searchVo.getCurrentPage(),searchVo.getPageSize());
        	return new PageInfo<User>(
                	Optional.ofNullable(userDao.getUsersBySearchVo(searchVo))
                        .	orElse(Collections.emptyList()));
   	 }
	@SELECT(****)
	List<User> getUsersBySearchVo(SearchVo searchVo);
	页面:
	/**用户页面
     	* 127.0.0.1/account/users --get
     	* @return
     	*/
    	@GetMapping("/users")
   	 public String users2Page(){
        	return "index";
    	}
	2、设计一套购物车接口，以 Cookie 或者 redis 实现
